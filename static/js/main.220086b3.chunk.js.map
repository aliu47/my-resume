{"version":3,"sources":["Components/NavigationMenu.js","Components/Navigation.js","Components/Header.js","Components/Footer.js","Views/Home.js","Views/About.js","Views/Projects.js","App.js","serviceWorker.js","index.js"],"names":["NavigationMenu","props","className","icon","faBars","onClick","closeMenu","to","Navigation","useState","showMenu","setShowMenu","maskTransitions","useTransition","from","position","opacity","enter","leave","menuTransitions","transform","map","item","key","div","style","Header","Footer","Home","About","Projects","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4RA8CeA,MAvCf,SAAwBC,GACpB,OACI,6BACI,4BAAQC,UAAU,+BAEd,kBAAC,IAAD,CACIC,KAAMC,IACNC,QAASJ,EAAMK,YACnB,0BAAMJ,UAAU,iBAAhB,wBAEA,4BACI,4BACI,kBAAC,IAAD,CACIK,GAAG,IACHL,UAAU,gCACVG,QAASJ,EAAMK,WAHnB,UAOJ,4BACI,kBAAC,IAAD,CACIC,GAAG,SACHL,UAAU,wBACVG,QAASJ,EAAMK,WAHnB,WAOA,4BACA,kBAAC,IAAD,CACIC,GAAG,YACHL,UAAU,wBACVG,QAASJ,EAAMK,WAHnB,iBCiBTE,MA/Cf,WAAuB,IAAD,EACcC,oBAAS,GADvB,mBACXC,EADW,KACDC,EADC,KAGZC,EAAkBC,YAAcH,EAAU,KAAM,CAClDI,KAAM,CAAEC,SAAU,WAAYC,QAAS,GACvCC,MAAO,CAAED,QAAS,GAClBE,MAAO,CAAEF,QAAS,KAEhBG,EAAkBN,YAAcH,EAAU,KAAM,CAClDI,KAAM,CAAEE,QAAS,EAAGI,UAAW,qBAC/BH,MAAO,CAAED,QAAS,EAAGI,UAAW,kBAChCF,MAAO,CAAEF,QAAS,EAAGI,UAAW,uBAGpC,OACI,6BAEI,0BAAMlB,UAAU,WACZ,kBAAC,IAAD,CACIC,KAAMC,IACNC,QAAS,kBAAMM,GAAaD,OAGnCE,EAAgBS,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAKtB,EAAd,EAAcA,MAAd,OACjBqB,GAAQ,kBAAC,IAASE,IAAV,CACJD,IAAKA,EACLE,MAAOxB,EACPC,UAAU,sDACVG,QAAS,kBAAMM,GAAY,SAGlCQ,EAAgBE,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAKtB,EAAd,EAAcA,MAAd,OACjBqB,GAAQ,kBAAC,IAASE,IAAV,CACJD,IAAKA,EACLE,MAAOxB,EACPC,UAAU,+DACV,kBAAC,EAAD,CACII,UAAW,kBAAMK,GAAY,YCvBtCe,MAZf,WACI,OACI,4BAAQxB,UAAU,yEACd,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAMK,GAAG,KACL,0BAAML,UAAU,2BAAhB,0BCFDyB,MARf,WACI,OACI,4BAAQzB,UAAU,gEAAlB,0B,OCUO0B,MAZf,WACI,OAAQ,yBAAK1B,UAAU,2BACnB,wBAAIA,UAAU,6CAAd,cACA,oDACA,yEACA,8CACA,8BCGO2B,MATf,WACI,OAAQ,6BACJ,wBAAI3B,UAAU,yBAAd,YACA,+DCMO4B,MATf,WACI,OAAQ,6BACJ,wBAAI5B,UAAU,yBAAd,YACA,+DCkCO6B,MA1Bf,WACE,OACE,yBAAK7B,UAAU,8CACb,kBAAC,IAAD,KACE,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8B,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,EAAD,QAIJ,kBAAC,EAAD,SCrBYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.220086b3.chunk.js","sourcesContent":["import React from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link\r\n} from \"react-router-dom\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\r\nfunction NavigationMenu(props) {\r\n    return (\r\n        <div>\r\n            <header className=\"border-b flex  items-center\">\r\n\r\n                <FontAwesomeIcon\r\n                    icon={faBars}\r\n                    onClick={props.closeMenu} />\r\n                <span className=\"font-bold p-3\">Andrew Liu's Resume</span>\r\n            </header>\r\n                <ul>\r\n                    <li>\r\n                        <Link\r\n                            to=\"/\"\r\n                            className=\" py-3 border-t border-b block\"\r\n                            onClick={props.closeMenu}>\r\n                            >Home\r\n                 </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link\r\n                            to=\"/about\"\r\n                            className=\" py-3  border-b block\"\r\n                            onClick={props.closeMenu}>\r\n                            >About</Link>\r\n                    </li>\r\n\r\n                        <li>\r\n                        <Link\r\n                            to=\"/projects\"\r\n                            className=\" py-3  border-b block\"\r\n                            onClick={props.closeMenu}>\r\n                            >Projects</Link>\r\n                    </li>\r\n                </ul>\r\n        </div>\r\n            )\r\n        }\r\n        \r\nexport default NavigationMenu;","import React, { useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\r\nimport { useTransition, animated } from 'react-spring'\r\nimport NavigationMenu from './NavigationMenu';\r\nfunction Navigation() {\r\n    const [showMenu, setShowMenu] = useState(false)\r\n\r\n    const maskTransitions = useTransition(showMenu, null, {\r\n        from: { position: 'absolute', opacity: 0 },\r\n        enter: { opacity: 1 },\r\n        leave: { opacity: 0 },\r\n    })\r\n    const menuTransitions = useTransition(showMenu, null, {\r\n        from: { opacity: 0, transform: 'translateX(-100%)' },\r\n        enter: { opacity: 1, transform: 'translateX(0%)' },\r\n        leave: { opacity: 0, transform: 'translateX(-100%)' },\r\n    })\r\n\r\n    return (\r\n        <nav>\r\n\r\n            <span className=\"text-xl\">\r\n                <FontAwesomeIcon\r\n                    icon={faBars}\r\n                    onClick={() => setShowMenu(!showMenu)}\r\n                />\r\n            </span>\r\n            {maskTransitions.map(({ item, key, props }) =>\r\n                item && <animated.div\r\n                    key={key}\r\n                    style={props}\r\n                    className=\"bg-black-t-50 fixed top-0 left-0 w-full h-full z-50\"\r\n                    onClick={() => setShowMenu(false)}>\r\n                </animated.div>\r\n            )}\r\n            {menuTransitions.map(({ item, key, props }) =>\r\n                item && <animated.div\r\n                    key={key}\r\n                    style={props}\r\n                    className=\"fixed bg-gray-900 top-0 left-0 w-1/8 h-full z-50 shadow p-3\">\r\n                    <NavigationMenu\r\n                        closeMenu={() => setShowMenu(false)}\r\n                        />\r\n                </animated.div>\r\n            )}\r\n        \r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nexport default Navigation","import React from 'react'\r\nimport Navigation from './Navigation'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link\r\n} from \"react-router-dom\"\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"border-b  p-3 flex bg-opacity-90 items-center text-center bg-gray-900\">\r\n            <Navigation />\r\n            <Link to=\"/\">\r\n                <span className=\"font text-gray-100  p-3\">Andrew Liu's Resume</span>\r\n            </Link>\r\n            \r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nfunction Footer(){\r\n    return(\r\n        <footer className=\"bg-gray-900 text-center text-xs p-3 w-full absolute bottom-0\">\r\n        Created by Andrew Liu\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nfunction Home() {\r\n    return (<div className=\"text-center bg-gray-900\">\r\n        <h1 className=\" text-gray-100 text-5xl mb text-shadow-xl\">Andrew Liu</h1>\r\n        <h2> | Software Engineer</h2>\r\n        <h2>University of North Carolina at Charlotte</h2>\r\n        <h2>aliu4@uncc.edu</h2>\r\n        <p>\r\n\r\n        </p>\r\n    </div>)\r\n}\r\n\r\nexport default Home","import React from 'react'\r\n\r\nfunction About() {\r\n    return (<div>\r\n        <h1 className=\"font-bold text-2xl mb\">About us</h1>\r\n        <p>\r\n            This is the about page content\r\n        </p>\r\n    </div>)\r\n}\r\n\r\nexport default About","import React from 'react'\r\n\r\nfunction Projects() {\r\n    return (<div>\r\n        <h1 className=\"font-bold text-2xl mb\">About us</h1>\r\n        <p>\r\n            This is the about page content\r\n        </p>\r\n    </div>)\r\n}\r\n\r\nexport default Projects","import React from 'react';\nimport './tailwind.css';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\"\nimport Home from './Views/Home';\nimport About from './Views/About';\nimport Projects from './Views/Projects';\n\nfunction App() {\n  return (\n    <div className=\"relative pb-10 min-h-screen text-gray-100 \">\n      <Router>\n        <Header />\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n\n          <Route path=\"/about\">\n            <About />\n          </Route>\n\n          <Route path=\"/projects\">\n            <Projects />\n          </Route>\n        </Switch>\n        \n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}